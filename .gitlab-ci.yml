stages:
  - package
  - s2-package
  - s2-service

#
# package
package:
  variables:
    MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
    MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  stage: package
  image: maven:3.6.3-jdk-8
  script:
    - GPG_FILE=`find / -name xuxiaowei_0x97A36125_SECRET`
    - echo $GPG_FILE
    - gpg --import $GPG_FILE
    - SETTINGS_FILE=`find / -name settings.xml`
    - echo $SETTINGS_FILE
    - sed -i "s#</servers>#<server><id>ossrh</id><username>$ossrh_user</username><password>$ossrh_pass</password></server>&#" $SETTINGS_FILE
    - git --version
    - echo 常量网址：https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
    - echo 当前分支：$CI_COMMIT_BRANCH
    - echo 主分支：$CI_DEFAULT_BRANCH
    - echo 项目路径：$CI_PROJECT_DIR
    - mvn clean -e -U package source:jar javadoc:jar install -Pgpg -DskipTests && PACKAGE_FLAG=1
    - if [ "$PACKAGE_FLAG" == "1" ]; then echo '打包完成'; else echo '打包失败' && xxxx; fi
    - mvn -pl passport-ui rar:rar -Prar -DskipTests && gpg --armor --detach-sign passport-ui/target/*.rar && echo 登录服务前端rar打包完成
    - mvn -pl ui rar:rar -Prar -DskipTests && gpg --armor --detach-sign ui/target/*.rar && echo UI服务前端rar打包完成
  cache:
    paths:
      - .m2/repository
      - passport-ui/node/
      - passport-ui/node_modules/
      - ui/node/
      - ui/node_modules/
  artifacts:
    name: package
    paths:
      - target/xuxiaowei-cloud-starter-parent-*
      - admin-server/target/admin-server-*
      - authorization-server/target/authorization-server-*
      - cloud-commons-parent/cloud-starter-core/target/cloud-starter-core-*
      - cloud-commons-parent/cloud-starter-idempotent/target/cloud-starter-idempotent-*
      - cloud-commons-parent/cloud-starter-loadbalancer/target/cloud-starter-loadbalancer-*
      - cloud-commons-parent/cloud-starter-log/target/cloud-starter-log-*
      - cloud-commons-parent/cloud-starter-mybatis/target/cloud-starter-mybatis-*
      - cloud-commons-parent/cloud-starter-oauth2/target/cloud-starter-oauth2-*
      - cloud-commons-parent/cloud-starter-openfeign/target/cloud-starter-openfeign-*
      - cloud-commons-parent/cloud-starter-redis/target/cloud-starter-redis-*
      - cloud-commons-parent/cloud-starter-session-redis/target/cloud-starter-session-redis-*
      - cloud-commons-parent/cloud-starter-system/target/cloud-starter-system-*
      - cloud-commons-parent/cloud-starter-validation/target/cloud-starter-validation-*
      - cloud-commons-parent/target/cloud-commons-parent-*
      - example-parent/target/example-parent-*
      - example-parent/cxf-client/target/cxf-client-*
      - example-parent/oauth2-client/target/oauth2-client-*
      - gateway/target/gateway-*
      - passport/target/passport-*
      - passport-ui/target/passport-ui-*
      - plugins/target/plugins-*
      - plugins/bos-maven-plugin/target/bos-maven-plugin-*
      - plugins/cos-maven-plugin/target/cos-maven-plugin-*
      - plugins/obs-maven-plugin/target/obs-maven-plugin-*
      - plugins/oss-maven-plugin/target/oss-maven-plugin-*
      - plugins/rar-maven-plugin/target/rar-maven-plugin-*
      - resource-services-parent/target/resource-services-parent-*
      - resource-services-parent/audit/target/audit-*
      - resource-services-parent/canal/target/canal-*
      - resource-services-parent/user/target/user-*
      - resource-services-parent/webservice/target/webservice-*
      - resource-services-parent/websocket/target/websocket-*
      - resource-services-parent/wechat-applet/target/wechat-applet-*
      - ui/target/ui-*
      - utils/target/utils-*
  only:
    - main

#
# s2 打包
s2-package:
  variables:
    MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
    MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  stage: s2-package
  image: maven:3.6.3-jdk-8
  script:
    - GPG_FILE=`find / -name xuxiaowei_0x97A36125_SECRET`
    - echo $GPG_FILE
    - gpg --import $GPG_FILE
    - SETTINGS_FILE=`find / -name settings.xml`
    - echo $SETTINGS_FILE
    - sed -i "s#</servers>#<server><id>ossrh</id><username>$ossrh_user</username><password>$ossrh_pass</password></server>&#" $SETTINGS_FILE
    - git --version
    - echo 常量网址：https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
    - echo 当前分支：$CI_COMMIT_BRANCH
    - echo 主分支：$CI_DEFAULT_BRANCH
    - echo 项目路径：$CI_PROJECT_DIR
    - mvn clean -e -U package source:jar javadoc:jar install -Pgpg -DskipTests && PACKAGE_FLAG=1
    - if [ "$PACKAGE_FLAG" == "1" ]; then echo '打包完成'; else echo '打包失败' && xxxx; fi
    - mvn -pl passport-ui rar:rar -Prar -DskipTests && gpg --armor --detach-sign passport-ui/target/*.rar && echo 登录服务前端rar打包完成
    - mvn -pl ui rar:rar -Prar -DskipTests && gpg --armor --detach-sign ui/target/*.rar && echo UI服务前端rar打包完成
    - JAR_PATH=/home/gitlab-runner/jar/$CI_COMMIT_BRANCH
    - echo JAR_PATH：$JAR_PATH
    - if [ ! -f $JAR_PATH ]; then sudo mkdir $JAR_PATH -p && echo 创建发布文件夹完成; fi
  cache:
    paths:
      - .m2/repository
      - passport-ui/node/
      - passport-ui/node_modules/
      - ui/node/
      - ui/node_modules/
  artifacts:
    paths:
      - target/xuxiaowei-cloud-starter-parent-*
      - admin-server/target/admin-server-*
      - authorization-server/target/authorization-server-*
      - cloud-commons-parent/cloud-starter-core/target/cloud-starter-core-*
      - cloud-commons-parent/cloud-starter-idempotent/target/cloud-starter-idempotent-*
      - cloud-commons-parent/cloud-starter-loadbalancer/target/cloud-starter-loadbalancer-*
      - cloud-commons-parent/cloud-starter-mybatis/target/cloud-starter-mybatis-*
      - cloud-commons-parent/cloud-starter-redis/target/cloud-starter-redis-*
      - cloud-commons-parent/cloud-starter-session-redis/target/cloud-starter-session-redis-*
      - cloud-commons-parent/cloud-starter-validation/target/cloud-starter-validation-*
      - cloud-commons-parent/target/cloud-commons-parent-*
      - example-parent/target/example-parent-*
      - example-parent/oauth2-client/target/oauth2-client-*
      - gateway/target/gateway-*
      - passport/target/passport-*
      - passport-ui/target/passport-ui-*
      - plugins/target/plugins-*
      - plugins/bos-maven-plugin/target/bos-maven-plugin-*
      - plugins/cos-maven-plugin/target/cos-maven-plugin-*
      - plugins/obs-maven-plugin/target/obs-maven-plugin-*
      - plugins/oss-maven-plugin/target/oss-maven-plugin-*
      - plugins/rar-maven-plugin/target/rar-maven-plugin-*
      - resource-services-parent/target/resource-services-parent-*
      - resource-services-parent/audit/target/audit-*
      - resource-services-parent/canal/target/canal-*
      - resource-services-parent/user/target/user-*
      - resource-services-parent/websocket/target/websocket-*
      - resource-services-parent/wechat-applet/target/wechat-applet-*
      - ui/target/ui-*
      - ui/dist
      - utils/target/utils-*
  only:
    - s2

#
# s2 发布网关服务
s2-gateway:
  stage: s2-service
  needs:
    - job: s2-package
      artifacts: true
  script:
    - MODULE='gateway'
    - echo MODULE：$MODULE
    - ARTIFACT_ID=`mvn -e -U help:evaluate -pl $MODULE -Dexpression=project.artifactId -q -DforceStdout`
    - VERSION=`mvn help:evaluate -pl $MODULE -Dexpression=project.version -q -DforceStdout`
    - PACKAGING=`mvn help:evaluate -pl $MODULE -Dexpression=project.packaging -q -DforceStdout`
    - APP_NAME=$ARTIFACT_ID-$VERSION.$PACKAGING
    - echo APP_NAME：$APP_NAME
    - cp $MODULE/target/$APP_NAME $JAR_PATH/$APP_NAME && echo 复制新jar包完成
    - SERVICE=/usr/lib/systemd/system/$MODULE.service
    - echo SERVICE：$SERVICE
    - JAVA_HOME=/software/dragonwell-8.10.11
    - echo JAVA_HOME：$JAVA_HOME
    - echo "" > $SERVICE
    - echo "[Unit]" >> $SERVICE
    - echo "Description=$MODULE" >> $SERVICE
    - echo "After=syslog.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Service]" >> $SERVICE
    - echo "EnvironmentFile=/etc/profile" >> $SERVICE
    - echo "ExecStart=$JAVA_HOME/bin/java -jar $JAR_PATH/$APP_NAME --spring.profiles.active=prod" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Install]" >> $SERVICE
    - echo "WantedBy=multi-user.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo 创建新启动脚本完成
    - sudo systemctl enable $MODULE.service && echo 设置开机启动完成
    - sudo systemctl daemon-reload
    - sudo systemctl restart $MODULE.service && echo 重启项目完成
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
    - MODULE_STATUS=0
    - sleep 30 && echo 增加延时
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '延时查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
  tags:
    - s2
  only:
    - s2

#
# s2 发布监控（管理）服务
s2-admin-server:
  stage: s2-service
  needs:
    - job: s2-package
      artifacts: true
  script:
    - MODULE='admin-server'
    - echo MODULE：$MODULE
    - ARTIFACT_ID=`mvn -e -U help:evaluate -pl $MODULE -Dexpression=project.artifactId -q -DforceStdout`
    - VERSION=`mvn help:evaluate -pl $MODULE -Dexpression=project.version -q -DforceStdout`
    - PACKAGING=`mvn help:evaluate -pl $MODULE -Dexpression=project.packaging -q -DforceStdout`
    - APP_NAME=$ARTIFACT_ID-$VERSION.$PACKAGING
    - echo APP_NAME：$APP_NAME
    - cp $MODULE/target/$APP_NAME $JAR_PATH/$APP_NAME && echo 复制新jar包完成
    - SERVICE=/usr/lib/systemd/system/$MODULE.service
    - echo SERVICE：$SERVICE
    - JAVA_HOME=/software/dragonwell-8.10.11
    - echo JAVA_HOME：$JAVA_HOME
    - echo "" > $SERVICE
    - echo "[Unit]" >> $SERVICE
    - echo "Description=$MODULE" >> $SERVICE
    - echo "After=syslog.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Service]" >> $SERVICE
    - echo "EnvironmentFile=/etc/profile" >> $SERVICE
    - echo "ExecStart=$JAVA_HOME/bin/java -jar $JAR_PATH/$APP_NAME --spring.profiles.active=prod" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Install]" >> $SERVICE
    - echo "WantedBy=multi-user.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo 创建新启动脚本完成
    - sudo systemctl enable $MODULE.service && echo 设置开机启动完成
    - sudo systemctl daemon-reload
    - sudo systemctl restart $MODULE.service && echo 重启项目完成
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
    - MODULE_STATUS=0
    - sleep 30 && echo 增加延时
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '延时查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
  tags:
    - s2
  only:
    - s2

#
# s2 发布授权服务
s2-authorization-server:
  stage: s2-service
  needs:
    - job: s2-package
      artifacts: true
  script:
    - MODULE='authorization-server'
    - echo MODULE：$MODULE
    - ARTIFACT_ID=`mvn -e -U help:evaluate -pl $MODULE -Dexpression=project.artifactId -q -DforceStdout`
    - VERSION=`mvn help:evaluate -pl $MODULE -Dexpression=project.version -q -DforceStdout`
    - PACKAGING=`mvn help:evaluate -pl $MODULE -Dexpression=project.packaging -q -DforceStdout`
    - APP_NAME=$ARTIFACT_ID-$VERSION.$PACKAGING
    - echo APP_NAME：$APP_NAME
    - cp $MODULE/target/$APP_NAME $JAR_PATH/$APP_NAME && echo 复制新jar包完成
    - SERVICE=/usr/lib/systemd/system/$MODULE.service
    - echo SERVICE：$SERVICE
    - JAVA_HOME=/software/dragonwell-8.10.11
    - echo JAVA_HOME：$JAVA_HOME
    - echo "" > $SERVICE
    - echo "[Unit]" >> $SERVICE
    - echo "Description=$MODULE" >> $SERVICE
    - echo "After=syslog.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Service]" >> $SERVICE
    - echo "EnvironmentFile=/etc/profile" >> $SERVICE
    - echo "ExecStart=$JAVA_HOME/bin/java -jar $JAR_PATH/$APP_NAME --spring.profiles.active=prod" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Install]" >> $SERVICE
    - echo "WantedBy=multi-user.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo 创建新启动脚本完成
    - sudo systemctl enable $MODULE.service && echo 设置开机启动完成
    - sudo systemctl daemon-reload
    - sudo systemctl restart $MODULE.service && echo 重启项目完成
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
    - MODULE_STATUS=0
    - sleep 30 && echo 增加延时
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '延时查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
  tags:
    - s2
  only:
    - s2

#
# s2 发布登录服务
s2-passport:
  stage: s2-service
  needs:
    - job: s2-package
      artifacts: true
  script:
    - MODULE='passport'
    - echo MODULE：$MODULE
    - ARTIFACT_ID=`mvn -e -U help:evaluate -pl $MODULE -Dexpression=project.artifactId -q -DforceStdout`
    - VERSION=`mvn help:evaluate -pl $MODULE -Dexpression=project.version -q -DforceStdout`
    - PACKAGING=`mvn help:evaluate -pl $MODULE -Dexpression=project.packaging -q -DforceStdout`
    - APP_NAME=$ARTIFACT_ID-$VERSION.$PACKAGING
    - echo APP_NAME：$APP_NAME
    - cp $MODULE/target/$APP_NAME $JAR_PATH/$APP_NAME && echo 复制新jar包完成
    - SERVICE=/usr/lib/systemd/system/$MODULE.service
    - echo SERVICE：$SERVICE
    - JAVA_HOME=/software/dragonwell-8.10.11
    - echo JAVA_HOME：$JAVA_HOME
    - echo "" > $SERVICE
    - echo "[Unit]" >> $SERVICE
    - echo "Description=$MODULE" >> $SERVICE
    - echo "After=syslog.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Service]" >> $SERVICE
    - echo "EnvironmentFile=/etc/profile" >> $SERVICE
    - echo "ExecStart=$JAVA_HOME/bin/java -jar $JAR_PATH/$APP_NAME --spring.profiles.active=prod" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Install]" >> $SERVICE
    - echo "WantedBy=multi-user.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo 创建新启动脚本完成
    - sudo systemctl enable $MODULE.service && echo 设置开机启动完成
    - sudo systemctl daemon-reload
    - sudo systemctl restart $MODULE.service && echo 重启项目完成
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
    - MODULE_STATUS=0
    - sleep 30 && echo 增加延时
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '延时查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
  tags:
    - s2
  only:
    - s2

#
# s2 发布审计服务
s2-audit:
  stage: s2-service
  needs:
    - job: s2-package
      artifacts: true
  script:
    - cd resource-services-parent
    - pwd
    - MODULE='audit'
    - echo MODULE：$MODULE
    - ARTIFACT_ID=`mvn -e -U help:evaluate -pl $MODULE -Dexpression=project.artifactId -q -DforceStdout`
    - VERSION=`mvn help:evaluate -pl $MODULE -Dexpression=project.version -q -DforceStdout`
    - PACKAGING=`mvn help:evaluate -pl $MODULE -Dexpression=project.packaging -q -DforceStdout`
    - APP_NAME=$ARTIFACT_ID-$VERSION.$PACKAGING
    - echo APP_NAME：$APP_NAME
    - cp $MODULE/target/$APP_NAME $JAR_PATH/$APP_NAME && echo 复制新jar包完成
    - SERVICE=/usr/lib/systemd/system/$MODULE.service
    - echo SERVICE：$SERVICE
    - JAVA_HOME=/software/dragonwell-8.10.11
    - echo JAVA_HOME：$JAVA_HOME
    - echo "" > $SERVICE
    - echo "[Unit]" >> $SERVICE
    - echo "Description=$MODULE" >> $SERVICE
    - echo "After=syslog.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Service]" >> $SERVICE
    - echo "EnvironmentFile=/etc/profile" >> $SERVICE
    - echo "ExecStart=$JAVA_HOME/bin/java -jar $JAR_PATH/$APP_NAME --spring.profiles.active=prod" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Install]" >> $SERVICE
    - echo "WantedBy=multi-user.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo 创建新启动脚本完成
    - sudo systemctl enable $MODULE.service && echo 设置开机启动完成
    - sudo systemctl daemon-reload
    - sudo systemctl restart $MODULE.service && echo 重启项目完成
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
    - MODULE_STATUS=0
    - sleep 30 && echo 增加延时
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '延时查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
  tags:
    - s2
  only:
    - s2

#
# s2 发布MySQL二进制订阅服务
s2-canal:
  stage: s2-service
  needs:
    - job: s2-package
      artifacts: true
  script:
    - cd resource-services-parent
    - pwd
    - MODULE='canal'
    - echo MODULE：$MODULE
    - ARTIFACT_ID=`mvn -e -U help:evaluate -pl $MODULE -Dexpression=project.artifactId -q -DforceStdout`
    - VERSION=`mvn help:evaluate -pl $MODULE -Dexpression=project.version -q -DforceStdout`
    - PACKAGING=`mvn help:evaluate -pl $MODULE -Dexpression=project.packaging -q -DforceStdout`
    - APP_NAME=$ARTIFACT_ID-$VERSION.$PACKAGING
    - echo APP_NAME：$APP_NAME
    - cp $MODULE/target/$APP_NAME $JAR_PATH/$APP_NAME && echo 复制新jar包完成
    - SERVICE=/usr/lib/systemd/system/$MODULE.service
    - echo SERVICE：$SERVICE
    - JAVA_HOME=/software/dragonwell-8.10.11
    - echo JAVA_HOME：$JAVA_HOME
    - echo "" > $SERVICE
    - echo "[Unit]" >> $SERVICE
    - echo "Description=$MODULE" >> $SERVICE
    - echo "After=syslog.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Service]" >> $SERVICE
    - echo "EnvironmentFile=/etc/profile" >> $SERVICE
    - echo "ExecStart=$JAVA_HOME/bin/java -jar $JAR_PATH/$APP_NAME --spring.profiles.active=prod" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Install]" >> $SERVICE
    - echo "WantedBy=multi-user.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo 创建新启动脚本完成
    - sudo systemctl enable $MODULE.service && echo 设置开机启动完成
    - sudo systemctl daemon-reload
    - sudo systemctl restart $MODULE.service && echo 重启项目完成
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
    - MODULE_STATUS=0
    - sleep 30 && echo 增加延时
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '延时查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
  tags:
    - s2
  only:
    - s2

#
# s2 发布用户服务
s2-user:
  stage: s2-service
  needs:
    - job: s2-package
      artifacts: true
  script:
    - cd resource-services-parent
    - pwd
    - MODULE='user'
    - echo MODULE：$MODULE
    - ARTIFACT_ID=`mvn -e -U help:evaluate -pl $MODULE -Dexpression=project.artifactId -q -DforceStdout`
    - VERSION=`mvn help:evaluate -pl $MODULE -Dexpression=project.version -q -DforceStdout`
    - PACKAGING=`mvn help:evaluate -pl $MODULE -Dexpression=project.packaging -q -DforceStdout`
    - APP_NAME=$ARTIFACT_ID-$VERSION.$PACKAGING
    - echo APP_NAME：$APP_NAME
    - cp $MODULE/target/$APP_NAME $JAR_PATH/$APP_NAME && echo 复制新jar包完成
    - SERVICE=/usr/lib/systemd/system/$MODULE.service
    - echo SERVICE：$SERVICE
    - JAVA_HOME=/software/dragonwell-8.10.11
    - echo JAVA_HOME：$JAVA_HOME
    - echo "" > $SERVICE
    - echo "[Unit]" >> $SERVICE
    - echo "Description=$MODULE" >> $SERVICE
    - echo "After=syslog.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Service]" >> $SERVICE
    - echo "EnvironmentFile=/etc/profile" >> $SERVICE
    - echo "ExecStart=$JAVA_HOME/bin/java -jar $JAR_PATH/$APP_NAME --spring.profiles.active=prod" >> $SERVICE
    - echo "" >> $SERVICE
    - echo "[Install]" >> $SERVICE
    - echo "WantedBy=multi-user.target" >> $SERVICE
    - echo "" >> $SERVICE
    - echo 创建新启动脚本完成
    - sudo systemctl enable $MODULE.service && echo 设置开机启动完成
    - sudo systemctl daemon-reload
    - sudo systemctl restart $MODULE.service && echo 重启项目完成
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
    - MODULE_STATUS=0
    - sleep 30 && echo 增加延时
    - sudo systemctl status $MODULE.service && MODULE_STATUS=1
    - if [ "$MODULE_STATUS" == "1" ]; then echo '延时查看项目状态成功'; else echo '查看项目状态失败' && xxxx; fi
  tags:
    - s2
  only:
    - s2

#
# s2 发布UI服务
s2-ui:
  stage: s2-service
  needs:
    - job: s2-package
      artifacts: true
  script:
    - MODULE='ui'
    - echo MODULE：$MODULE
    - RELEASE_PATH=/home/gitlab-runner/node/$MODULE
    - if [ ! -f $RELEASE_PATH ]; then sudo mkdir $RELEASE_PATH -p && echo 创建文件夹完成; fi
    - echo RELEASE_PATH：$RELEASE_PATH
    - if [ ! -f $RELEASE_PATH ]; then sudo mkdir $RELEASE_PATH -p && echo 创建发布文件夹完成; fi
    - cp -r ./$MODULE/dist/* $RELEASE_PATH && echo 复制新文件夹完成
  tags:
    - s2
  only:
    - s2
